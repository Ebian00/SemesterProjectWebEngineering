
----identity_function()----

function identity_function(x){
  return function func(){ return x};
}
const data = {
  message: identity_function(1),
}
$('#msg').html(identity_function(1 + "kdjlsdf"))


-----------------------------------------------------------------

----addf_function()----
function addf(x) {
    return function (y) {
        return x + y;
    }
}


-----------------------------------------------------------------

----applyf_function()----

function applyf(fnc){

  return  function (x){
    return function (y){
      return fnc(x,y)
    }


-----------------------------------------------------------------

----curry()_function()----

function curry(fnc, x){

  return  function (y){
      return fnc(x,y)
  };
  
}

function add(x,y){
  return x+y;
}
function mul(x,y){
  return x*y;
}
function sub(x,y){
  return x-y;
}
function div(x,y){
  return x/y;
}
$('#msg').html(curry(mul,5)(6))


-----------------------------------------------------------------

----inc()_function()----

function inc(x){
  return  add (x);
  
}

function add(x){


-----------------------------------------------------------------

----methodize()_function()----

function add (a,b) {
  return a+b;
}
function methodize(f){
	return function(y){
  		return f(this,y)
  }


-----------------------------------------------------------------

----twice()_function()----

function add(x,y){
  return x+y;
}
function twice(f){
return function(x){
  return f(x,x);
}
}
var double = twice(add); 
$('#msg').html(double(12))

-----------------------------------------------------------------

----composeu()_function()----

function twice(fnc) {
    return function (a) {
        return fnc(a, a);
    }
}


-----------------------------------------------------------------

----composeb()_function()----

function add(x,y){
  return x + y;
}
function mul(a,b) {
    return a * b;
}
function composeb(fnc1, fnc2) {
    return function (a, b, c) {
        return fnc2(fnc1(a, b), c);
    }
}

console.log(composeb(add, mul)(2, 3, 5));  //25


-----------------------------------------------------------------

----once()_function()----

function add(a,b,c){
  return a+b +c;
}
function once(fnc) {
    return function () {
        var f = fnc;
        fnc = null;
        return f.apply(this, arguments);
    };
}

add_once = once(add);

console.log(add_once(3, 4 , 3)); 
console.log(add_once(3, 4,3)); 


-----------------------------------------------------------------

----counterf()_function()----

function counterf(x) {
    return {
        inc: function () {
          x = x+1;
            return x ;
        },
        dec: function () {
          x = x-1;
           return x;
        }
    }
}
var increment = counterf(20);
console.log(increment.inc()); // 7
console.log(increment.dec()); // 7


-----------------------------------------------------------------

----revocable()&revoke()_function()----

function revocable(fnc) {
    return {
        invoke: function () {
            return fnc.apply(this, arguments);
        },
        revoke: function () {
            fnc = null;
        }
    }
}

var temp = revocable(console.log);
temp.invoke(453); 
temp.invoke('dsfsdf' + 434); 
temp.revoke();
console.log(temp.invoke(39));


-----------------------------------------------------------------

----Array_Wrapper()_function()----

function wrapper() {
  var array = [];
  return {
    append: function append(v) {
      array[array.length] = v;
    },
    get: function get(i) {
      return array[+i];
    },
    store: function store(i, v) {
      array[+i] = v;
    }
  };
}
var w = wrapper();
w.append(22);
w.append(32);
w.append("es");
